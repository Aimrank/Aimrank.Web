// <auto-generated />
using System;
using Aimrank.Web.Modules.Cluster.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aimrank.Web.Database.Migrator.Migrations.Cluster
{
    [DbContext(typeof(ClusterContext))]
    partial class ClusterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Aimrank.Web.Modules.Cluster.Application.Entities.Pod", b =>
                {
                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaxServers")
                        .HasColumnType("int");

                    b.HasKey("IpAddress");

                    b.ToTable("Pods", "csgo");
                });

            modelBuilder.Entity("Aimrank.Web.Modules.Cluster.Application.Entities.Server", b =>
                {
                    b.Property<Guid>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("PodIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SteamTokenToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MatchId");

                    b.HasIndex("PodIpAddress");

                    b.HasIndex("SteamTokenToken")
                        .IsUnique();

                    b.ToTable("Servers", "csgo");
                });

            modelBuilder.Entity("Aimrank.Web.Modules.Cluster.Application.Entities.SteamToken", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Token");

                    b.ToTable("SteamTokens", "csgo");
                });

            modelBuilder.Entity("Aimrank.Web.Modules.Cluster.Application.Entities.Server", b =>
                {
                    b.HasOne("Aimrank.Web.Modules.Cluster.Application.Entities.Pod", "Pod")
                        .WithMany("Servers")
                        .HasForeignKey("PodIpAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aimrank.Web.Modules.Cluster.Application.Entities.SteamToken", "SteamToken")
                        .WithOne("Server")
                        .HasForeignKey("Aimrank.Web.Modules.Cluster.Application.Entities.Server", "SteamTokenToken")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pod");

                    b.Navigation("SteamToken");
                });

            modelBuilder.Entity("Aimrank.Web.Modules.Cluster.Application.Entities.Pod", b =>
                {
                    b.Navigation("Servers");
                });

            modelBuilder.Entity("Aimrank.Web.Modules.Cluster.Application.Entities.SteamToken", b =>
                {
                    b.Navigation("Server");
                });
#pragma warning restore 612, 618
        }
    }
}
